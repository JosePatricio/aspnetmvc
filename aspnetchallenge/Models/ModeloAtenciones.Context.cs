//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace aspnetchallenge.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class challengedbEntities : DbContext
    {
        public challengedbEntities()
            : base("name=challengedbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TipoAtencion> TipoAtencions { get; set; }
        public virtual DbSet<Atencion> Atencions { get; set; }
    
        public virtual int sp_insertar_turno(string id, string nombreCliente, string codigoTipoAtencion, ObjectParameter estado, ObjectParameter mensaje)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var codigoTipoAtencionParameter = codigoTipoAtencion != null ?
                new ObjectParameter("CodigoTipoAtencion", codigoTipoAtencion) :
                new ObjectParameter("CodigoTipoAtencion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertar_turno", idParameter, nombreClienteParameter, codigoTipoAtencionParameter, estado, mensaje);
        }
    
        public virtual ObjectResult<sp_obtener_atenciones_en_cola_Result> sp_obtener_atenciones_en_cola(string codigoAtencion)
        {
            var codigoAtencionParameter = codigoAtencion != null ?
                new ObjectParameter("CodigoAtencion", codigoAtencion) :
                new ObjectParameter("CodigoAtencion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_obtener_atenciones_en_cola_Result>("sp_obtener_atenciones_en_cola", codigoAtencionParameter);
        }
    
        public virtual ObjectResult<sp_obtener_tipos_atencion_Result> sp_obtener_tipos_atencion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_obtener_tipos_atencion_Result>("sp_obtener_tipos_atencion");
        }
    
        public virtual ObjectResult<Atencion> spObtenerAtencionesEnCola(string codigoAtencion)
        {
            var codigoAtencionParameter = codigoAtencion != null ?
                new ObjectParameter("CodigoAtencion", codigoAtencion) :
                new ObjectParameter("CodigoAtencion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Atencion>("spObtenerAtencionesEnCola", codigoAtencionParameter);
        }
    
        public virtual ObjectResult<Atencion> spObtenerAtencionesEnCola(string codigoAtencion, MergeOption mergeOption)
        {
            var codigoAtencionParameter = codigoAtencion != null ?
                new ObjectParameter("CodigoAtencion", codigoAtencion) :
                new ObjectParameter("CodigoAtencion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Atencion>("spObtenerAtencionesEnCola", mergeOption, codigoAtencionParameter);
        }
    
        public virtual ObjectResult<TipoAtencion> spObtenerTiposAtencion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TipoAtencion>("spObtenerTiposAtencion");
        }
    
        public virtual ObjectResult<TipoAtencion> spObtenerTiposAtencion(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TipoAtencion>("spObtenerTiposAtencion", mergeOption);
        }
    
        public virtual int spInsertarTurno(string id, string nombreCliente, string codigoTipoAtencion, ObjectParameter estado, ObjectParameter mensaje)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var codigoTipoAtencionParameter = codigoTipoAtencion != null ?
                new ObjectParameter("CodigoTipoAtencion", codigoTipoAtencion) :
                new ObjectParameter("CodigoTipoAtencion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarTurno", idParameter, nombreClienteParameter, codigoTipoAtencionParameter, estado, mensaje);
        }
    }
}
